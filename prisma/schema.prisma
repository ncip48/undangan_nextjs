// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  username       String   @unique @db.VarChar(100)
  email          String   @unique
  password       String
  role           Int      @default(1)
  emailConfirmed Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("users")
}

model Product {
  id              String   @id @default(uuid())
  name            String
  price           Int
  description     String   @db.Text
  includePrintout Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("products")
}

model Template {
  id        String    @id @default(uuid())
  name      String
  path      String
  image     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  wedding   Wedding[]

  @@map("templates")
}

model Purchase {
  id        String   @id @default(uuid())
  name      String
  total     Int
  wedding   Wedding?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("purchases")
}

model Wedding {
  id                   String    @id @default(uuid())
  purchase             Purchase  @relation(fields: [purchaseId], references: [id])
  purchaseId           String    @unique
  template             Template  @relation(fields: [templateId], references: [id])
  templateId           String    @unique
  username             String    @unique
  nama_mempelai_wanita String
  singkatan_wanita     String?
  putri_ke             String
  nama_ortu_wanita     String
  nama_mempelai_pria   String
  singkatan_pria       String?
  putra_ke             String
  nama_ortu_pria       String
  tanggal_akad         DateTime  @db.Date
  jam_akad             String?
  tanggal_resepsi      DateTime  @db.Date
  jam_resepsi          String?
  alamat               String
  link_google_maps     String
  gift                 Gift[]
  gallery              Gallery[]
  wish                 Wish[]
  isExpired            Boolean?  @default(false)
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  @@map("weddings")
}

model Gift {
  id        String   @id @default(uuid())
  wedding   Wedding  @relation(fields: [weddingId], references: [id])
  weddingId String
  type      String
  name      String
  an        String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("gifts")
}

model Gallery {
  id        String   @id @default(uuid())
  wedding   Wedding  @relation(fields: [weddingId], references: [id])
  weddingId String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("galleries")
}

model Wish {
  id        String   @id @default(uuid())
  wedding   Wedding  @relation(fields: [weddingId], references: [id])
  weddingId String
  name      String
  wish      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("wishes")
}
